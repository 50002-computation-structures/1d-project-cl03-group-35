testbench tester {
    sig clk
    sig rst
    sig pc[6]
    sig led [16]
    sig rd2 [16]
    sig ablu[16]
    fun tick_clock() {
        clk = 1
        $tick() // tick without capturing signals
        clk = 0
        $tick()
    }
    
    testere aw(.clk(clk),.rst_n (rst))
    test myTest {
        rst = 0
        clk = 0 // initialize the value
        aw.select_button = 0
        aw.start_button = 0
        aw.row= 4b0000
        pc = aw.pc_
        $tick_clock() 
        $tick_clock() 
        aw.start_button = 1    
        $tick_clock() 
        pc = aw.pc_
        aw.start_button = 0 
        $tick_clock() 
         $tick_clock() 
         $tick_clock() 
         $tick_clock() 
         $tick_clock() 
         $tick_clock() 
         $tick_clock() 
         $tick_clock() 
         $tick_clock() 
        $tick_clock() 
        $tick_clock() 
        $tick_clock() 
        $tick_clock() 
        $tick_clock() 
        $tick_clock() 
        $tick_clock() 
        $tick_clock() 
        pc = aw.pc_
        aw.select_button = 1    
        $tick_clock() 
        aw.select_button = 0 
        pc = aw.pc_
        $tick_clock()         
        
        aw.start_button = 1    
        pc = aw.pc_
        $tick_clock() 
        aw.start_button = 0 
        pc = aw.pc_
        $tick_clock() 
        pc = aw.pc_
        
        $tick_clock() 
        rd2 = aw.rd2
        ablu = aw.ablu
        pc = aw.pc_
        $tick_clock() 
        rd2 = aw.rd2
        ablu = aw.ablu
        pc = aw.pc_
        $tick_clock() 
        rd2 = aw.rd2
        ablu = aw.ablu
        pc = aw.pc_
        $tick_clock() 
        rd2 = aw.rd2
        ablu = aw.ablu
        pc = aw.pc_
        
        led = aw.ledbut
        $tick_clock() 
        rd2 = aw.rd2
        ablu = aw.ablu
        pc = aw.pc_
        
        led = aw.ledbut
        $tick_clock() 
        rd2 = aw.rd2
        ablu = aw.ablu
        pc = aw.pc_
        
        led = aw.ledbut

        
        // test goes here
    }
}