module shifter (
    input a[32],
    input b[32],
    input alufn[6],
    output shift[32]
) {
    x_bit_left_shifter left_shifter_16(#SHIFT(16))
    x_bit_left_shifter left_shifter_8(#SHIFT(8))
    x_bit_left_shifter left_shifter_4(#SHIFT(4))
    x_bit_left_shifter left_shifter_2(#SHIFT(2))
    x_bit_left_shifter left_shifter_1(#SHIFT(1))
    bit_reverse ra
    bit_reverse shr
    mux_2 inp[32]
    mux_2 pad
    mux_2 shift_out[32]
    
    always {
        ra.in = a

        repeat(i,32){
            inp.s0[i] = alufn[0]
            inp.in[i][0]= a[i]
            inp.in[i][1]= ra.reversed[i]
        }
        pad.s0 = alufn[1]
        pad.in[0] = 1b0
        pad.in[1] = a[31]
        
        left_shifter_16.pad = pad.out
        left_shifter_16.a = inp.out
        left_shifter_16.shift = b[4]
        
        left_shifter_8.pad = pad.out
        left_shifter_8.a = left_shifter_16.out
        left_shifter_8.shift = b[3]
        
        left_shifter_4.pad = pad.out
        left_shifter_4.a = left_shifter_8.out
        left_shifter_4.shift = b[2]
        
        left_shifter_2.pad = pad.out
        left_shifter_2.a = left_shifter_4.out
        left_shifter_2.shift = b[1]
        
        left_shifter_1.pad = pad.out
        left_shifter_1.a = left_shifter_2.out
        left_shifter_1.shift = b[0]
        
        shr.in = left_shifter_1.out
        
        repeat(i,32){
            shift_out.s0[i] = alufn[0] 
            shift_out.in[i][0]= left_shifter_1.out[i]
            shift_out.in[i][1]= shr.reversed[i]
        }
        shift = shift_out.out
    } 
}