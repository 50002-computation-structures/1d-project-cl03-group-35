/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module adder (
        input wire [31:0] a,
        input wire [31:0] b,
        input wire [5:0] alufn,
        output reg [31:0] out,
        output reg z,
        output reg v,
        output reg n
    );
    logic [31:0] M_sca_a32;
    logic [31:0] M_sca_b32;
    logic M_sca_cin;
    logic [31:0] M_sca_s32;
    logic M_sca_cout32;
    
    carry_skip_adder_32 sca (
        .a32(M_sca_a32),
        .b32(M_sca_b32),
        .cin(M_sca_cin),
        .s32(M_sca_s32),
        .cout32(M_sca_cout32)
    );
    
    
    logic [31:0] xb;
    always @* begin
        M_sca_a32 = a;
        xb = b ^ {6'h20{alufn[1'h0]}};
        M_sca_b32 = xb;
        M_sca_cin = alufn[1'h0];
        out = M_sca_s32;
        z = ~(|M_sca_s32);
        v = (((alufn[1'h0] ^ a[5'h1f]) & a[5'h1f]) & ~M_sca_s32[5'h1f]) | ((~(alufn[1'h0] ^ b[5'h1f]) & ~a[5'h1f]) & M_sca_s32[5'h1f]);
        n = M_sca_s32[5'h1f];
    end
    
    
endmodule