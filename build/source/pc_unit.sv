/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module pc_unit (
        input wire clk,
        input wire rst,
        output reg [31:0] pc_out,
        input wire [31:0] pc_in,
        input wire game_state,
        input wire [1:0] pc_sel,
        input wire [31:0] player
    );
    logic [31:0] D_pc_reg_d, D_pc_reg_q = 1'h1;
    always @* begin
        D_pc_reg_d = D_pc_reg_q;
        
        D_pc_reg_d = D_pc_reg_q;
        
        case (game_state)
            1'h1: begin
                if (player == 1'h0) begin
                    D_pc_reg_d = 1'h0;
                end else begin
                    D_pc_reg_d = player;
                end
            end
            1'h0: begin
                
                case (pc_sel)
                    1'h0: begin
                        D_pc_reg_d = pc_in + 1'h1;
                    end
                    2'h3: begin
                        D_pc_reg_d = 2'h0;
                    end
                endcase
                if (rst) begin
                    D_pc_reg_d = 1'h0;
                end
            end
        endcase
        pc_out = D_pc_reg_q;
    end
    
    
    always @(posedge (clk)) begin
        D_pc_reg_q <= D_pc_reg_d;
        
    end
endmodule