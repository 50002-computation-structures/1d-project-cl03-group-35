/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module carry_skip_adder_4bit (
        input wire [3:0] a,
        input wire [3:0] b,
        input wire ci,
        output reg [3:0] s,
        output reg cout
    );
    logic [31:0] R_0938b1de_i;
    logic [31:0] RR_0938b1de_i;
    logic [3:0] M_fa_a;
    logic [3:0] M_fa_b;
    logic [3:0] M_fa_cin;
    logic [3:0] M_fa_s;
    logic [3:0] M_fa_cout;
    
    genvar idx_0_277679963;
    
    generate
        for (idx_0_277679963 = 0; idx_0_277679963 < 4; idx_0_277679963 = idx_0_277679963 + 1) begin: forLoop_idx_0_277679963
            fa fa (
                .a(M_fa_a[idx_0_277679963]),
                .b(M_fa_b[idx_0_277679963]),
                .cin(M_fa_cin[idx_0_277679963]),
                .s(M_fa_s[idx_0_277679963]),
                .cout(M_fa_cout[idx_0_277679963])
            );
        end
    endgenerate
    
    
    always @* begin
        M_fa_a = a;
        M_fa_b = b;
        s = M_fa_s;
        for (RR_0938b1de_i = 0; RR_0938b1de_i < 3'h4; RR_0938b1de_i = RR_0938b1de_i + 1) begin
      R_0938b1de_i = (0) + RR_0938b1de_i * (1);
            if (R_0938b1de_i == 1'h0) begin
                M_fa_cin[1'h0] = ci;
            end else begin
                M_fa_cin[R_0938b1de_i] = M_fa_cout[R_0938b1de_i - 1'h1];
            end
        end
        if ((&M_fa_cout)) begin
            cout = ci;
        end else begin
            cout = M_fa_cout[2'h3];
        end
    end
    
    
endmodule