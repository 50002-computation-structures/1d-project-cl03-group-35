/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module button_map (
        input wire clk,
        input wire rst,
        output reg [3:0] col,
        input wire [3:0] row,
        output reg [7:0] out
    );
    localparam _MP_SIZE_869145400 = 3'h4;
    localparam _MP_DIV_869145400 = 1'h0;
    localparam _MP_TOP_869145400 = 4'h3;
    localparam _MP_UP_869145400 = 1'h1;
    logic [3:0] M_ctr_value;
    
    counter #(
        .SIZE(_MP_SIZE_869145400),
        .DIV(_MP_DIV_869145400),
        .TOP(_MP_TOP_869145400),
        .UP(_MP_UP_869145400)
    ) ctr (
        .clk(clk),
        .rst(rst),
        .value(M_ctr_value)
    );
    
    
    logic [3:0] D_state_d, D_state_q = 0;
    always @* begin
        D_state_d = D_state_q;
        
        D_state_d = D_state_q;
        D_state_d = 4'h0;
        D_state_d[M_ctr_value] = 1'h1;
        col = D_state_q;
        out = 8'h0;
        if (row[1'h0]) begin
            out = {D_state_q, 4'h1};
        end
        if (row[1'h1]) begin
            out = {D_state_q, 4'h2};
        end
        if (row[2'h2]) begin
            out = {D_state_q, 4'h4};
        end
        if (row[2'h3]) begin
            out = {D_state_q, 4'h8};
        end
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_state_q <= 0;
        end else begin
            D_state_q <= D_state_d;
        end
    end
endmodule